{
  "resolvedId": "/Users/ilaolovannikov/WebstormProjects/ithub-vue/node_modules/.pnpm/primevue@4.3.4_vue@3.5.14_typescript@5.8.3_/node_modules/primevue/tabs/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import BaseComponent from '@primevue/core/basecomponent';\nimport TabsStyle from 'primevue/tabs/style';\nimport { createElementBlock, openBlock, mergeProps, renderSlot } from 'vue';\n\nvar script$1 = {\n  name: 'BaseTabs',\n  \"extends\": BaseComponent,\n  props: {\n    value: {\n      type: [String, Number],\n      \"default\": undefined\n    },\n    lazy: {\n      type: Boolean,\n      \"default\": false\n    },\n    scrollable: {\n      type: Boolean,\n      \"default\": false\n    },\n    showNavigators: {\n      type: Boolean,\n      \"default\": true\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    },\n    selectOnFocus: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  style: TabsStyle,\n  provide: function provide() {\n    return {\n      $pcTabs: this,\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'Tabs',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:value'],\n  data: function data() {\n    return {\n      d_value: this.value\n    };\n  },\n  watch: {\n    value: function value(newValue) {\n      this.d_value = newValue;\n    }\n  },\n  methods: {\n    updateValue: function updateValue(newValue) {\n      if (this.d_value !== newValue) {\n        this.d_value = newValue;\n        this.$emit('update:value', newValue);\n      }\n    },\n    isVertical: function isVertical() {\n      return this.orientation === 'vertical';\n    }\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [renderSlot(_ctx.$slots, \"default\")], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n",
      "start": 1750971640282,
      "end": 1750971640293,
      "sourcemaps": null
    },
    {
      "name": "@tailwindcss/vite:generate:build",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "pre"
    },
    {
      "name": "vite:esbuild",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "normal-normal"
    },
    {
      "name": "vite:vue",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "normal-normal"
    },
    {
      "name": "vite:build-html",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "normal-normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "normal-normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "normal-normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "normal-normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "normal-normal"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "normal-normal"
    },
    {
      "name": "vite:reporter",
      "start": 1750971640293,
      "end": 1750971640293,
      "order": "normal"
    }
  ]
}
